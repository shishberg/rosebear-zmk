#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define MAIN 0
#define NUM  1
#define SYM  2
#define GAM  3
#define GNUM 4
#define GFUN 5
#define HOLD 6

#define ASTR KP_ASTERISK

/*
&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
    quick-tap-ms = <150>;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
    quick-tap-ms = <150>;
};
*/

/ {
    behaviors {
        ms: mod_tap_short {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ml: mod_tap_long {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ls: layer_tap_short {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        ll: layer_tap_long {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
    &kp Q       &kp W      &kp F       &kp P      &kp B       &kp J &kp L      &kp U       &kp Y      &kp SQT
    &ml LCTRL A &ml LALT R &ms LSHFT S &ml LGUI T &kp G       &kp M &ml RGUI N &ms RSHFT E &ml RALT I &ml RCTRL O
    &kp Z       &kp X      &kp C       &kp D      &kp V       &kp K &kp H      &kp COMMA   &kp DOT    &kp FSLH
             &ls SYM TAB   &ls NUM SPACE   &ls HOLD ESC       &ll HOLD DEL   &ll NUM RET   &ll SYM BSPC
            >;
        };

        NUM_layer {
            bindings = <
    &kp F10 &kp F7   &kp F8   &kp F9   &kp LBRC   &kp RBRC   &kp N7    &kp N8    &kp N9    &kp EQUAL
    &kp F11 &kp F4   &kp F5   &kp F6   &kp LPAR   &kp RPAR   &kp N4    &kp N5    &kp N6    &kp MINUS
    &kp F12 &kp F1   &kp F2   &kp F3   &kp LBKT   &kp RBKT   &kp N1    &kp N2    &kp N3    &kp SEMI
             &trans       &trans    &to MAIN      &to MAIN   &trans    &kp N0
            >;
        };

        SYM_layer {
            bindings = <
    &kp HOME &kp PG_UP  &kp PG_DN    &kp END      &none         &kp PIPE   &kp AMPS   &kp ASTR   &kp GRAVE &kp PLUS    
    &kp LEFT &kp UP     &kp DOWN     &kp RIGHT    &none         &kp TILDE  &kp DLLR   &kp PRCNT  &kp CARET &kp UNDER
    &none    &kp K_MUTE &kp K_VOL_DN &kp K_VOL_UP &none         &kp BSLH   &kp EXCL   &kp AT     &kp HASH  &kp COLON
                                &trans   &trans   &to MAIN      &to MAIN   &trans   &trans
            >;
        };

        GAM_layer {
            bindings = <
    &kp Q &kp W &kp F &kp P &kp B                           &kp J    &kp L      &kp U       &kp Y      &kp SQT
    &kp A &kp R &kp S &kp T &kp G                           &kp M    &ms RGUI N &ms RSHFT E &ml RALT I &ml RCTRL O
    &kp Z &kp X &kp C &kp D &kp V                           &kp K    &kp H      &kp COMMA   &kp DOT    &kp FSLH
             &lt GNUM TAB &lt GFUN SPACE &lt HOLD ESC       &lt HOLD DEL   &lt NUM RET   &lt SYM BSPC
            >;
        };

        GNUM_layer {
            bindings = <
    &kp LALT  &kp N7   &kp N8   &kp N9   &kp K_VOL_UP   &kp RBRC   &kp N7    &kp N8    &kp N9    &kp EQUAL
    &kp LSHFT &kp N4   &kp N5   &kp N6   &kp K_VOL_DN   &kp RPAR   &kp N4    &kp N5    &kp N6    &kp MINUS
    &kp LCMD  &kp N1   &kp N2   &kp N3   &kp N0         &kp RBKT   &kp N1    &kp N2    &kp N3    &kp SEMI
                       &trans   &trans   &trans         &trans     &trans    &kp N0
            >;
        };

        GFUN_layer {
            bindings = <
    &kp LALT  &kp F7   &kp F8   &kp F9   &kp F12    &kp RBRC   &kp N7    &kp N8    &kp N9    &kp EQUAL
    &kp LSHFT &kp F4   &kp F5   &kp F6   &kp F11    &kp RPAR   &kp N4    &kp N5    &kp N6    &kp MINUS
    &kp LCMD  &kp F1   &kp F2   &kp F3   &kp F10    &kp RBKT   &kp N1    &kp N2    &kp N3    &kp SEMI
                        &trans  &trans   &trans     &trans     &trans    &kp N0
            >;
        };

        HOLD_layer {
            bindings = <
    &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR &kp LS(LA(LC(J))) &kp LS(LA(LC(L))) &kp LS(LA(LC(U))) &kp LS(LA(LC(Y)))   &kp LS(LA(LC(SQT)))
    &out OUT_TOG &none &none &none &tog GAM                               &kp LS(LA(LC(M))) &kp LS(LA(LC(N))) &kp LS(LA(LC(E)))     &kp LS(LA(LC(I)))   &kp LS(LA(LC(O)))
    &none        &none &none &none &none                                  &kp LS(LA(LC(K))) &kp LS(LA(LC(H))) &kp LS(LA(LC(COMMA))) &kp LS(LA(LC(DOT))) &kp LS(LA(LC(FSLH)))
            &to SYM &to NUM &none                                  &none &to NUM &to SYM
            >;
        };

    };
};
